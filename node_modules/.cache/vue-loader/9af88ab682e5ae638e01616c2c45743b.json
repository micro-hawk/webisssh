{"remainingRequest":"/home/microhawk/github/webish/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/microhawk/github/webish/client/components/swaggerApiDoc/swagger/apiCard.vue?vue&type=style&index=0&id=53d6a312&scoped=true&lang=scss&","dependencies":[{"path":"/home/microhawk/github/webish/client/components/swaggerApiDoc/swagger/apiCard.vue","mtime":1662182788537},{"path":"/home/microhawk/github/webish/node_modules/css-loader/dist/cjs.js","mtime":1662182844921},{"path":"/home/microhawk/github/webish/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1662182846321},{"path":"/home/microhawk/github/webish/node_modules/postcss-loader/src/index.js","mtime":1662182845451},{"path":"/home/microhawk/github/webish/node_modules/sass-loader/dist/cjs.js","mtime":1662182844055},{"path":"/home/microhawk/github/webish/node_modules/cache-loader/dist/cjs.js","mtime":1662182844115},{"path":"/home/microhawk/github/webish/node_modules/vue-loader/lib/index.js","mtime":1662182845851}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIkB2YXIiOwouYXBpLWNhcmQgewogICYtZ2V0IHsKICAgIGJhY2tncm91bmQ6IHJnYmEoJG9wdC0yLCAwLjEpOwogICAgLm1ldGhvZC1iYWRnZSB7CiAgICAgIGJhY2tncm91bmQ6ICRvcHQtMjsKICAgIH0KICB9CiAgJi1wb3N0IHsKICAgIGJhY2tncm91bmQ6IHJnYmEoJHN1Y2Nlc3MsIDAuMTUpOwogICAgLm1ldGhvZC1iYWRnZSB7CiAgICAgIGJhY2tncm91bmQ6ICRzdWNjZXNzOwogICAgfQogIH0KICAmLXB1dCB7CiAgICBiYWNrZ3JvdW5kOiByZ2JhKCR3YXJuaW5nLCAwLjE1KTsKICAgIC5tZXRob2QtYmFkZ2UgewogICAgICBiYWNrZ3JvdW5kOiAkd2FybmluZzsKICAgIH0KICB9CiAgJi1kZWxldGUgewogICAgYmFja2dyb3VuZDogcmdiYSgkYWxlcnQsIDAuMTUpOwogICAgLm1ldGhvZC1iYWRnZSB7CiAgICAgIGJhY2tncm91bmQ6ICRhbGVydDsKICAgIH0KICB9CiAgLm1ldGhvZC1iYWRnZSB7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOwogICAgY29sb3I6ICR3aGl0ZTsKICAgIHdpZHRoOiA4MHB4OwogIH0KICAuYXBpLXBhdGggewogICAgJjpob3ZlciB7CiAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOwogICAgICBjb2xvcjogJG9wdC0yOwogICAgfQogIH0KICAmLWltcGwgewogICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICR0ZXh0LWxpZ2h0ZXN0OwogICAgJl9fcmVxdWVzdCB7CiAgICAgICYgPiBkaXYgewogICAgICAgIHdpZHRoOiA1MCU7CiAgICAgIH0KICAgIH0KICAgIC5yZXF1ZXN0LXByb3BlcnR5IHsKICAgICAgaW5wdXQsCiAgICAgIHNlbGVjdCB7CiAgICAgICAgZm9udC1zaXplOiAxNHB4OwogICAgICAgIGNvbG9yOiAkdGV4dC1saWdodDsKICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7CiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJHRleHQtbGlnaHQ7CiAgICAgICAgcGFkZGluZzogNHB4IDhweDsKICAgICAgICB3aWR0aDogMzAwcHg7CiAgICAgICAgJjpmb2N1cyB7CiAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAkb3B0LTI7CiAgICAgICAgICBvdXRsaW5lOiBub25lOwogICAgICAgICAgYm94LXNoYWRvdzogMHB4IDBweCA1cHggJG9wdC0yOwogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KfQo="},{"version":3,"sources":["apiCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"apiCard.vue","sourceRoot":"client/components/swaggerApiDoc/swagger","sourcesContent":["<template>\n  <div class=\"api-card mt-4 bg-ele-1 round\">\n    <div :class=\"`api-card-${api.method} p-4`\">\n      <div class=\"api-card-header v-center space-between\">\n        <div class=\"v-center\">\n          <h4 class=\"method-badge py-2 mr-4 tx round\" @click=\"open = !open\">\n            {{ api.method }}\n          </h4>\n          <h4 class=\"api-path pointer tx-lg tx-light\" @click=\"open = !open\">\n            {{ api.path }}\n          </h4>\n        </div>\n        <p class=\"tx-small tx-light\">{{ api.description }}</p>\n      </div>\n      <div class=\"api-card-impl mt-3\" v-if=\"open\">\n        <h5 class=\"mt-3 tx\">{{ api.summary }}</h5>\n        <div class=\"api-card-impl__request flex\">\n          <div class=\"tx-light pr-3\">\n            <div>\n              <div class=\"flex space-between mt-3\">\n                <b>Headers:</b>\n                <svg\n                  @click=\"addNewHeader\"\n                  width=\"16\"\n                  height=\"16\"\n                  viewBox=\"0 0 25 25\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <rect x=\"10\" y=\"2\" width=\"5\" height=\"21\" fill=\"#00303D\" />\n                  <rect\n                    x=\"22.9998\"\n                    y=\"10\"\n                    width=\"5\"\n                    height=\"21\"\n                    transform=\"rotate(89.7176 22.9998 10)\"\n                    fill=\"#00303D\"\n                  />\n                </svg>\n              </div>\n              <div\n                v-for=\"(header, index) in headers\"\n                :key=\"header.id\"\n                class=\"mt-2 request-property flex v-center space-between\"\n              >\n                <div v-if=\"header.isCustom\">\n                  <input\n                  style=\"width: 200px\"\n                  type=\"text\" v-model=\"headers[index].name\"\n                  :disabled=\"!edit\"\n                />\n                </div>\n                <div class=\"mr-3\" v-else>\n                  <h6 class=\"tx tx-small\">\n                    {{ header.name}}<b v-if=\"header.required\" class=\"ml-1 tx-alert\">*</b>\n                  </h6>\n                  <p class=\"tx-x-small\">{{ header.description }}</p>\n                </div>\n                <input\n                  type=\"text\"\n                  v-if=\"!header.hasOptions\"\n                  v-model=\"headers[index].value\"\n                  :disabled=\"!edit\"\n                />\n                <select v-else v-model=\"headers[index].value\" :disabled=\"!edit\">\n                  <option\n                    v-for=\"option in header.options\"\n                    :key=\"option.id\"\n                    :value=\"option\"\n                  >\n                    {{ option }}\n                  </option>\n                </select>\n              </div>\n            </div>\n            <div v-if=\"pathParam.length\">\n              <div class=\"flex space-between mt-3\">\n                <b>Path Parameaters:</b>\n              </div>\n              <div\n                v-for=\"(property, index) in pathParam\"\n                :key=\"property.id\"\n                class=\"mt-2 request-property flex v-center space-between\"\n              >\n                <div class=\"mr-3\">\n                  <h6 class=\"tx tx-small\">\n                    {{ property.name\n                    }}<b v-if=\"property.required\" class=\"ml-1 tx-alert\">*</b>\n                  </h6>\n                  <p class=\"tx-x-small\">{{ property.description }}</p>\n                </div>\n                <input\n                  type=\"text\"\n                  v-if=\"!property.hasOptions\"\n                  v-model=\"pathParam[index].value\"\n                  :disabled=\"!edit\"\n                />\n                <select\n                  v-else\n                  v-model=\"pathParam[index].value\"\n                  :disabled=\"!edit\"\n                >\n                  <option\n                    v-for=\"option in property.options\"\n                    :key=\"option.id\"\n                    :value=\"option\"\n                  >\n                    {{ option }}\n                  </option>\n                </select>\n              </div>\n            </div>\n            <div v-if=\"query.length\">\n              <div class=\"flex space-between mt-3\">\n                <b>Query Parameaters:</b>\n              </div>\n              <div\n                v-for=\"(property, index) in query\"\n                :key=\"property.id\"\n                class=\"mt-2 request-property flex v-center space-between\"\n              >\n                <div class=\"mr-3\">\n                  <h6 class=\"tx tx-small\">\n                    {{ property.name\n                    }}<b v-if=\"property.required\" class=\"ml-1 tx-alert\">*</b>\n                  </h6>\n                  <p class=\"tx-x-small\">{{ property.description }}</p>\n                </div>\n                <input\n                  type=\"text\"\n                  v-if=\"!property.hasOptions\"\n                  v-model=\"query[index].value\"\n                  :disabled=\"!edit\"\n                />\n                <select v-else v-model=\"query[index].value\" :disabled=\"!edit\">\n                  <option\n                    v-for=\"option in property.options\"\n                    :key=\"option.id\"\n                    :value=\"option\"\n                  >\n                    {{ option }}\n                  </option>\n                </select>\n              </div>\n            </div>\n            <div v-if=\"api.body\">\n              <div class=\"mt-3\">\n                <b>Request Body:</b>\n              </div>\n              <p-json class=\"mt-2\" v-model=\"body\" :edit=\"edit\" />\n            </div>\n            <div class=\"tx-small mt-3 flex flex-end\">\n              <p-btn v-if=\"!edit\" color=\"lightBlue\" @click=\"edit = true\" light>\n                Edit\n              </p-btn>\n              <p-btn\n                v-if=\"edit\"\n                color=\"green\"\n                light\n                class=\"ml-2\"\n                @click=\"applyApiCall\"\n              >\n                Apply\n              </p-btn>\n              <p-btn\n                v-if=\"edit\"\n                color=\"lightBlue\"\n                light\n                class=\"ml-2\"\n                @click=\"setProperty\"\n              >\n                Reset\n              </p-btn>\n              <p-btn\n                v-if=\"edit\"\n                color=\"red\"\n                @click=\"edit = false\"\n                light\n                class=\"ml-2\"\n              >\n                Cancel\n              </p-btn>\n            </div>\n          </div>\n          <div class=\"tx-light\">\n            <p v-if=\"api.consumes && api.consumes.length\" class=\"tx mt-2\">\n              <b class=\"mr-2\">Consumes:</b> {{ api.consumes.join(\", \") }}\n            </p>\n            <p v-if=\"api.produces && api.produces.length\" class=\"tx mt-2\">\n              <b class=\"mr-2\">Produces:</b> {{ api.produces.join(\", \") }}\n            </p>\n            <div class=\"mt-2 flex\">\n              <p class=\"tx bold\">Response:</p>\n              <div class=\"flex-grow response-body px-2\">\n                <p-json v-model=\"api.response\" :edit=\"false\" />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"api-card-impl__response\">\n          <response-card ref=\"responseCard\" />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { cloneDeep } from \"lodash\";\nimport { mapState } from \"vuex\";\nimport responseCard from \"./responseCard.vue\";\nexport default {\n  components: { responseCard },\n  name: \"apiCard\",\n  props: {\n    api: Object,\n  },\n  data: () => ({\n    edit: false,\n    open: false,\n    body: null,\n    headers: [],\n    pathParam: [],\n    query: [],\n  }),\n  computed: {\n    ...mapState(\"swagger\", [\"apiDocs\", \"proxyPath\", \"selectedServer\"]),\n  },\n  methods: {\n    setProperty() {\n      this.body = cloneDeep(this.api.body || null);\n      this.headers = cloneDeep(this.api.header || []);\n      this.pathParam = cloneDeep(this.api.pathParam);\n      this.query = cloneDeep(this.api.query);\n    },\n    addNewHeader() {\n      this.headers.push({\n        name: \"custom-header\",\n        description: \"Custom\",\n        isCustom: true,\n        required: true,\n        hasOptions: false,\n        type: \"string\",\n        value: \"\",\n      });\n    },\n    applyApiCall() {\n      const requestConfig = {\n        url: this.proxyPath,\n        method: \"POST\",\n        data: {\n          proto: this.selectedServer.proto,\n          baseUrl: this.apiDocs.host + this.apiDocs.basePath,\n          url: this.api.path,\n          method: this.api.method,\n          query: this.query.reduce((q, e) => {\n            q[e.name] = e.value;\n            return q;\n          }, {}),\n          params: this.pathParam.reduce((q, e) => {\n            q[e.name] = e.value;\n            return q;\n          }, {}),\n          headers: this.headers.reduce((q, e) => {\n            q[e.name] = e.value;\n            return q;\n          }, {}),\n          body: this.body,\n        },\n      };\n      this.$refs.responseCard.applyApiCall(requestConfig);\n    },\n  },\n  created() {\n    this.setProperty();\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import \"@var\";\n.api-card {\n  &-get {\n    background: rgba($opt-2, 0.1);\n    .method-badge {\n      background: $opt-2;\n    }\n  }\n  &-post {\n    background: rgba($success, 0.15);\n    .method-badge {\n      background: $success;\n    }\n  }\n  &-put {\n    background: rgba($warning, 0.15);\n    .method-badge {\n      background: $warning;\n    }\n  }\n  &-delete {\n    background: rgba($alert, 0.15);\n    .method-badge {\n      background: $alert;\n    }\n  }\n  .method-badge {\n    text-align: center;\n    text-transform: uppercase;\n    color: $white;\n    width: 80px;\n  }\n  .api-path {\n    &:hover {\n      text-decoration: underline;\n      color: $opt-2;\n    }\n  }\n  &-impl {\n    border-top: 1px solid $text-lightest;\n    &__request {\n      & > div {\n        width: 50%;\n      }\n    }\n    .request-property {\n      input,\n      select {\n        font-size: 14px;\n        color: $text-light;\n        border-radius: 4px;\n        border: 1px solid $text-light;\n        padding: 4px 8px;\n        width: 300px;\n        &:focus {\n          border: 1px solid $opt-2;\n          outline: none;\n          box-shadow: 0px 0px 5px $opt-2;\n        }\n      }\n    }\n  }\n}\n</style>"]}]}