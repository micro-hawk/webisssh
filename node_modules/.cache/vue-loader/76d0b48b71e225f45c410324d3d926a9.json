{"remainingRequest":"/home/microhawk/github/webish/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/microhawk/github/webish/client/components/swaggerApiDoc/newServerForm.vue?vue&type=style&index=0&id=e7be3380&lang=scss&scoped=true&","dependencies":[{"path":"/home/microhawk/github/webish/client/components/swaggerApiDoc/newServerForm.vue","mtime":1662182788537},{"path":"/home/microhawk/github/webish/node_modules/css-loader/dist/cjs.js","mtime":1662182844921},{"path":"/home/microhawk/github/webish/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1662182846321},{"path":"/home/microhawk/github/webish/node_modules/postcss-loader/src/index.js","mtime":1662182845451},{"path":"/home/microhawk/github/webish/node_modules/sass-loader/dist/cjs.js","mtime":1662182844055},{"path":"/home/microhawk/github/webish/node_modules/cache-loader/dist/cjs.js","mtime":1662182844115},{"path":"/home/microhawk/github/webish/node_modules/vue-loader/lib/index.js","mtime":1662182845851}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpmb3JtIHsKICBwYWRkaW5nOiAyMHB4Owp9Cg=="},{"version":3,"sources":["newServerForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA;AACA;AACA","file":"newServerForm.vue","sourceRoot":"client/components/swaggerApiDoc","sourcesContent":["<template>\n  <form @submit.prevent>\n    <h2 class=\"tx-x-lg tx-light mb-3\">Add Your Server</h2>\n    <div class=\"p-input my-4\">\n      <input type=\"text\" class=\" block\" v-model=\"name\" title=\"Server Name\">\n      <label>Server Name</label>\n    </div>\n    <div class=\"v-center\">\n      <div class=\"p-input my-3\">\n        <select v-model=\"proto\">\n          <option value=\"http://\">HTTP</option>\n          <option value=\"https://\">HTTPS</option>\n        </select>\n        <label></label>\n      </div>\n      <div class=\"p-input my-3 ml-3\">\n        <input type=\"text\" v-model=\"endpoint\" title=\"Server Name\">\n        <label>Endpoint</label>\n      </div>\n      <div class=\"p-input my-3 ml-3 flex-grow\">\n        <input type=\"text\" v-model=\"docPath\" title=\"Server Name\">\n        <label>Api Doc Path</label>\n      </div>\n    </div>\n    <div class=\"v-center space-between tx-small my-2\">\n      <div class=\"flex\">\n        <p class=\"bold tx-light mr-1\">Server:</p>\n        <p class=\"tx-o2\">\n          {{proto + endpoint + docPath}}\n        </p>\n      </div>\n      <p \n        v-if=\"status !== 2\" class=\"status-chip pill tx-x-small px-3 mx-2 py-1 tx-white\"\n        :class=\"status === 1 ? 'bg-success' : status === -1 ? 'bg-alert' : 'bg-warning'\">\n        {{status === 1 ? \"Success\" : status === -1 ? \"Failed\" : \"Testing..\"}}\n      </p>\n    </div>\n    <div class=\"flex flex-end mt-5 tx-x-small\">\n      <p-btn color=\"lightBlue\" light class=\"mx-2\" @click=\"testServer\"> Test </p-btn>\n      <p-btn color=\"green\" class=\"mr-2\" light @click=\"saveConfig\">Save </p-btn>\n      <p-btn color=\"red\" light @click=\"$emit('close')\">Close </p-btn>\n    </div>\n  </form>\n</template>\n\n<script>\nexport default {\n  name: 'newServerForm',\n  data: () => ({\n    name: '',\n    proto: 'http://',\n    endpoint: '127.0.0.1:8080',\n    docPath: '/v2/api-docs',\n    id: null,\n    testingServer: false,\n    status: 2,\n    errorMessage: ''\n  }),\n  methods: {\n    testServer () {\n      this.testingServer = true\n      this.status = 0\n      this.$store.dispatch('swagger/getServerApiDoc', {\n        server: {\n          name: this.name,\n          proto: this.proto,\n          endpoint: this.endpoint,\n          docPath: this.docPath\n        },\n        cb: (res) => {\n          if (res.data.error) {\n            this.status = -1\n            this.errorMessage = res.data.errorMessage\n          } else {\n            this.status = 1\n          }\n        }\n      })\n    },\n    saveConfigCallback () {\n      this.$emit('close')\n      this.$store.commit('OPEN_LOADER', false)\n    },\n    saveConfig () {\n      this.$store.commit('OPEN_LOADER', true)\n      this.$store.dispatch('swagger/saveServer', {\n        data: {\n          name: this.name,\n          proto: this.proto,\n          endpoint: this.endpoint,\n          docPath: this.docPath,\n          id: this.id\n        },\n        cb: this.saveConfigCallback\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\nform {\n  padding: 20px;\n}\n</style>"]}]}