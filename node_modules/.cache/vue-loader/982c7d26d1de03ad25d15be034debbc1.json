{"remainingRequest":"/home/microhawk/github/webish/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/microhawk/github/webish/client/views/SwaggerApiDoc.vue?vue&type=style&index=0&id=7b48824e&lang=scss&scoped=true&","dependencies":[{"path":"/home/microhawk/github/webish/client/views/SwaggerApiDoc.vue","mtime":1662182788547},{"path":"/home/microhawk/github/webish/node_modules/css-loader/dist/cjs.js","mtime":1662182844921},{"path":"/home/microhawk/github/webish/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1662182846321},{"path":"/home/microhawk/github/webish/node_modules/postcss-loader/src/index.js","mtime":1662182845451},{"path":"/home/microhawk/github/webish/node_modules/sass-loader/dist/cjs.js","mtime":1662182844055},{"path":"/home/microhawk/github/webish/node_modules/cache-loader/dist/cjs.js","mtime":1662182844115},{"path":"/home/microhawk/github/webish/node_modules/vue-loader/lib/index.js","mtime":1662182845851}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouc3dhZ2dlci1hcGkgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBtYXgtd2lkdGg6IDExMDBweDsKICB3aWR0aDogODAlOwogIG1hcmdpbjogMHB4IGF1dG87Cn0KCg=="},{"version":3,"sources":["SwaggerApiDoc.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACA;AACA;AACA;AACA;AACA","file":"SwaggerApiDoc.vue","sourceRoot":"client/views","sourcesContent":["<template>\n  <div class=\"swagger-api container pt-5\">\n    <div class=\"flex space-between\">\n      <div class=\"tx-lightest bold pointer\">\n        <span\n          @click=\"openTab = 'swagger'\"\n          class=\"tx-x-lg mr-4\"\n          :class=\"openTab === 'swagger' ? 'tx-o2' : null\"\n        >API Docs</span>\n        <span\n          @click=\"openTab = 'servers'\"\n          class=\"tx-x-lg\"\n          :class=\"openTab === 'servers' ? 'tx-o2' : null\"\n        >Servers</span>\n      </div>\n      <p-btn color=\"orange\" @click=\"overlay = true\" >Add Server</p-btn>\n    </div>\n    <keep-alive>\n      <component v-if=\"serverLoaded\" :is=\"openTab\" />\n    </keep-alive>\n    <div class=\"overlay\" v-if=\"overlay\">\n      <new-server-form class=\"bg-ele-2\" @close=\"overlay = false\"/>\n    </div>\n  </div>\n</template>\n\n<script>\nimport NewServerForm from '@/components/swaggerApiDoc/newServerForm'\nimport Servers from '@/components/swaggerApiDoc/servers.vue'\nimport Swagger from '@/components/swaggerApiDoc/swagger.vue'\nimport { mapState } from 'vuex'\nexport default {\n  components: { NewServerForm, Servers, Swagger },\n  name: 'SwagerApiDoc',\n  data: () => ({\n    overlay: false,\n    openTab: 'swagger'\n  }),\n  computed: {\n    ...mapState('swagger', ['serverLoaded'])\n  },\n  methods: {\n  },\n  created () {\n    this.$store.dispatch('swagger/getServerList')\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.swagger-api {\n  position: relative;\n  max-width: 1100px;\n  width: 80%;\n  margin: 0px auto;\n}\n\n</style>\n"]}]}