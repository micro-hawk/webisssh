{"remainingRequest":"/home/microhawk/github/webish/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/microhawk/github/webish/client/components/elements/btn.vue?vue&type=style&index=0&id=2b94ce7a&scoped=true&lang=scss&","dependencies":[{"path":"/home/microhawk/github/webish/client/components/elements/btn.vue","mtime":1662182788537},{"path":"/home/microhawk/github/webish/node_modules/css-loader/dist/cjs.js","mtime":1662182844921},{"path":"/home/microhawk/github/webish/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1662182846321},{"path":"/home/microhawk/github/webish/node_modules/postcss-loader/src/index.js","mtime":1662182845451},{"path":"/home/microhawk/github/webish/node_modules/sass-loader/dist/cjs.js","mtime":1662182844055},{"path":"/home/microhawk/github/webish/node_modules/cache-loader/dist/cjs.js","mtime":1662182844115},{"path":"/home/microhawk/github/webish/node_modules/vue-loader/lib/index.js","mtime":1662182845851}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoucC1idG4gewogIGJvcmRlcjogMXB4IHNvbGlkOwogIGZvbnQtc2l6ZTogMWVtOwogIHBhZGRpbmc6IDAuNDVlbSAwLjY1ZW07CiAgYm9yZGVyLXJhZGl1czogMC4zZW07CiAgYm94LXNoYWRvdzogMCAxcHggM3B4IHJnYmEoMCwwLDAsMC4xMiksIDAgMXB4IDJweCByZ2JhKDAsMCwwLDAuMjQpOwp9Ci5wLWljb24tYnRuIHsKICBwYWRkaW5nOiAwcHg7CiAgYm9yZGVyLXJhZGl1czogNTAlOwogIGhlaWdodDogMS41ZW07CiAgd2lkdGg6IDEuNWVtOwp9Cg=="},{"version":3,"sources":["btn.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"btn.vue","sourceRoot":"client/components/elements","sourcesContent":["<template>\n  <button\n    class=\"p-btn\"\n    :class=\"{'p-icon-btn center': icon}\"\n    @click=\"click\"\n    @mouseover=\"hover = true\"\n    @mouseleave=\"hover = false\"\n    :style=\"getButtonStyle\">\n    <slot/>\n  </button>\n</template>\n\n<script>\nimport colorMap from '../../constent/colors'\nexport default {\n  name: 'p-btn',\n  props: {\n    color: String,\n    light: Boolean,\n    icon: Boolean\n  },\n  data: () => ({\n    hover: false\n  }),\n  computed: {\n    getButtonStyle () {\n      if (this.hover) {\n        return {\n          color: this.color ? colorMap[this.color] || colorMap.default : colorMap.default,\n          background: colorMap.white,\n          borderColor: this.color ? colorMap[this.color] || colorMap.default : colorMap.default\n        }\n      } else {\n        return {\n          color: this.light ? colorMap.white : colorMap.black,\n          background: this.color ? colorMap[this.color] || colorMap.default : colorMap.default,\n          borderColor: this.color ? colorMap[this.color] || colorMap.default : colorMap.default\n        }\n      }\n    }\n  },\n  methods: {\n    click (e) {\n      this.$emit('click', e)\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.p-btn {\n  border: 1px solid;\n  font-size: 1em;\n  padding: 0.45em 0.65em;\n  border-radius: 0.3em;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.p-icon-btn {\n  padding: 0px;\n  border-radius: 50%;\n  height: 1.5em;\n  width: 1.5em;\n}\n</style>"]}]}