{"remainingRequest":"/home/microhawk/github/webish/node_modules/thread-loader/dist/cjs.js!/home/microhawk/github/webish/node_modules/babel-loader/lib/index.js!/home/microhawk/github/webish/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/microhawk/github/webish/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/microhawk/github/webish/client/views/SwaggerApiDoc.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/microhawk/github/webish/client/views/SwaggerApiDoc.vue","mtime":1662182788547},{"path":"/home/microhawk/github/webish/node_modules/cache-loader/dist/cjs.js","mtime":1662182844115},{"path":"/home/microhawk/github/webish/node_modules/thread-loader/dist/cjs.js","mtime":1662182844048},{"path":"/home/microhawk/github/webish/node_modules/babel-loader/lib/index.js","mtime":1662182845501},{"path":"/home/microhawk/github/webish/node_modules/cache-loader/dist/cjs.js","mtime":1662182844115},{"path":"/home/microhawk/github/webish/node_modules/vue-loader/lib/index.js","mtime":1662182845851}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvbWljcm9oYXdrL2dpdGh1Yi93ZWJpc2gvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgTmV3U2VydmVyRm9ybSBmcm9tICdAL2NvbXBvbmVudHMvc3dhZ2dlckFwaURvYy9uZXdTZXJ2ZXJGb3JtJzsKaW1wb3J0IFNlcnZlcnMgZnJvbSAnQC9jb21wb25lbnRzL3N3YWdnZXJBcGlEb2Mvc2VydmVycy52dWUnOwppbXBvcnQgU3dhZ2dlciBmcm9tICdAL2NvbXBvbmVudHMvc3dhZ2dlckFwaURvYy9zd2FnZ2VyLnZ1ZSc7CmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCc7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBOZXdTZXJ2ZXJGb3JtOiBOZXdTZXJ2ZXJGb3JtLAogICAgU2VydmVyczogU2VydmVycywKICAgIFN3YWdnZXI6IFN3YWdnZXIKICB9LAogIG5hbWU6ICdTd2FnZXJBcGlEb2MnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBvdmVybGF5OiBmYWxzZSwKICAgICAgb3BlblRhYjogJ3N3YWdnZXInCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoe30sIG1hcFN0YXRlKCdzd2FnZ2VyJywgWydzZXJ2ZXJMb2FkZWQnXSkpLAogIG1ldGhvZHM6IHt9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnc3dhZ2dlci9nZXRTZXJ2ZXJMaXN0Jyk7CiAgfQp9Ow=="},{"version":3,"sources":["SwaggerApiDoc.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,OAAA,aAAA,MAAA,0CAAA;AACA,OAAA,OAAA,MAAA,wCAAA;AACA,OAAA,OAAA,MAAA,wCAAA;AACA,SAAA,QAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,aAAA,EAAA,aAAA;AAAA,IAAA,OAAA,EAAA,OAAA;AAAA,IAAA,OAAA,EAAA;AAAA,GADA;AAEA,EAAA,IAAA,EAAA,cAFA;AAGA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAAA;AAAA,GAHA;AAOA,EAAA,QAAA,oBACA,QAAA,CAAA,SAAA,EAAA,CAAA,cAAA,CAAA,CADA,CAPA;AAUA,EAAA,OAAA,EAAA,EAVA;AAYA,EAAA,OAZA,qBAYA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,uBAAA;AACA;AAdA,CAAA","sourcesContent":["<template>\n  <div class=\"swagger-api container pt-5\">\n    <div class=\"flex space-between\">\n      <div class=\"tx-lightest bold pointer\">\n        <span\n          @click=\"openTab = 'swagger'\"\n          class=\"tx-x-lg mr-4\"\n          :class=\"openTab === 'swagger' ? 'tx-o2' : null\"\n        >API Docs</span>\n        <span\n          @click=\"openTab = 'servers'\"\n          class=\"tx-x-lg\"\n          :class=\"openTab === 'servers' ? 'tx-o2' : null\"\n        >Servers</span>\n      </div>\n      <p-btn color=\"orange\" @click=\"overlay = true\" >Add Server</p-btn>\n    </div>\n    <keep-alive>\n      <component v-if=\"serverLoaded\" :is=\"openTab\" />\n    </keep-alive>\n    <div class=\"overlay\" v-if=\"overlay\">\n      <new-server-form class=\"bg-ele-2\" @close=\"overlay = false\"/>\n    </div>\n  </div>\n</template>\n\n<script>\nimport NewServerForm from '@/components/swaggerApiDoc/newServerForm'\nimport Servers from '@/components/swaggerApiDoc/servers.vue'\nimport Swagger from '@/components/swaggerApiDoc/swagger.vue'\nimport { mapState } from 'vuex'\nexport default {\n  components: { NewServerForm, Servers, Swagger },\n  name: 'SwagerApiDoc',\n  data: () => ({\n    overlay: false,\n    openTab: 'swagger'\n  }),\n  computed: {\n    ...mapState('swagger', ['serverLoaded'])\n  },\n  methods: {\n  },\n  created () {\n    this.$store.dispatch('swagger/getServerList')\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.swagger-api {\n  position: relative;\n  max-width: 1100px;\n  width: 80%;\n  margin: 0px auto;\n}\n\n</style>\n"],"sourceRoot":"client/views"}]}