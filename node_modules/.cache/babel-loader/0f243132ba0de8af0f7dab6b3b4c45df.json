{"remainingRequest":"/home/microhawk/github/webish/node_modules/babel-loader/lib/index.js!/home/microhawk/github/webish/node_modules/eslint-loader/index.js??ref--13-0!/home/microhawk/github/webish/client/store/swagger.js","dependencies":[{"path":"/home/microhawk/github/webish/client/store/swagger.js","mtime":1662182788537},{"path":"/home/microhawk/github/webish/node_modules/cache-loader/dist/cjs.js","mtime":1662182844115},{"path":"/home/microhawk/github/webish/node_modules/babel-loader/lib/index.js","mtime":1662182845501},{"path":"/home/microhawk/github/webish/node_modules/eslint-loader/index.js","mtime":1662182844238}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IGNvbmZpZyBmcm9tICcuLi8uLi9jb21tb24vcm91dGVyUGF0aC5qc29uJzsKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogewogICAgc2VydmVyTGlzdDogW10sCiAgICBzZXJ2ZXJMb2FkZWQ6IGZhbHNlLAogICAgYXBpRG9jczogbnVsbCwKICAgIHNlbGVjdGVkU2VydmVyOiBudWxsLAogICAgcHJveHlQYXRoOiBjb25maWcuc3dhZ2dlci5iYXNlUGF0aCArIGNvbmZpZy5zd2FnZ2VyLnByb3h5CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHNldFNlcnZlckxpc3Q6IGZ1bmN0aW9uIHNldFNlcnZlckxpc3Qoc3RhdGUsIHNlcnZlckxpc3QpIHsKICAgICAgc3RhdGUuc2VydmVyTGlzdCA9IHNlcnZlckxpc3Q7CiAgICAgIHN0YXRlLnNlcnZlckxvYWRlZCA9IHRydWU7CiAgICB9LAogICAgU0VUX0FQSV9ET0M6IGZ1bmN0aW9uIFNFVF9BUElfRE9DKHN0YXRlLCBkb2NzKSB7CiAgICAgIHN0YXRlLmFwaURvY3MgPSBkb2NzOwogICAgfSwKICAgIFNFVF9TRUxFQ1RFRF9TRVJWRVI6IGZ1bmN0aW9uIFNFVF9TRUxFQ1RFRF9TRVJWRVIoc3RhdGUsIHNlcnZlcikgewogICAgICBzdGF0ZS5zZWxlY3RlZFNlcnZlciA9IHNlcnZlcjsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIGdldFNlcnZlckxpc3Q6IGZ1bmN0aW9uIGdldFNlcnZlckxpc3QoX3JlZikgewogICAgICB2YXIgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgIHZhciByZXF1ZXN0Q29uZmlnID0gewogICAgICAgIHVybDogY29uZmlnLnN3YWdnZXIuYmFzZVBhdGggKyBjb25maWcuc3dhZ2dlci5nZXRBbGxTZXJ2ZXJzLAogICAgICAgIG1ldGhvZDogJ0dFVCcKICAgICAgfTsKICAgICAgYXhpb3MocmVxdWVzdENvbmZpZykudGhlbihmdW5jdGlvbiAoZSkgewogICAgICAgIHJldHVybiBjb21taXQoJ3NldFNlcnZlckxpc3QnLCBlLmRhdGEpOwogICAgICB9KTsKICAgIH0sCiAgICBzYXZlU2VydmVyOiBmdW5jdGlvbiBzYXZlU2VydmVyKF9yZWYyLCBfcmVmMykgewogICAgICB2YXIgZGlzcGF0Y2ggPSBfcmVmMi5kaXNwYXRjaDsKICAgICAgdmFyIGRhdGEgPSBfcmVmMy5kYXRhLAogICAgICAgICAgY2IgPSBfcmVmMy5jYjsKICAgICAgdmFyIHJlcXVlc3RDb25maWcgPSB7CiAgICAgICAgdXJsOiBjb25maWcuc3dhZ2dlci5iYXNlUGF0aCArIGNvbmZpZy5zd2FnZ2VyLmFkZFNlcnZlciwKICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICBkYXRhOiBkYXRhCiAgICAgIH07CiAgICAgIGF4aW9zKHJlcXVlc3RDb25maWcpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIFZ1ZS4kdG9hc3Quc3VjY2VzcygiU2VydmVyIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5Iik7CiAgICAgICAgZGlzcGF0Y2goJ2dldFNlcnZlckxpc3QnKTsKICAgICAgICBjYigpOwogICAgICB9KVsiY2F0Y2giXShmdW5jdGlvbiAoKSB7CiAgICAgICAgVnVlLiR0b2FzdC5lcnJvcigiRmFpbGVkIHRvIHNhdmUgc2VydmVyIik7CiAgICAgIH0pOwogICAgfSwKICAgIGRlbGV0ZVNlcnZlcjogZnVuY3Rpb24gZGVsZXRlU2VydmVyKF9yZWY0LCBfcmVmNSkgewogICAgICB2YXIgZGlzcGF0Y2ggPSBfcmVmNC5kaXNwYXRjaDsKICAgICAgdmFyIGlkID0gX3JlZjUuaWQsCiAgICAgICAgICBjYiA9IF9yZWY1LmNiOwogICAgICB2YXIgcmVxdWVzdENvbmZpZyA9IHsKICAgICAgICB1cmw6IGNvbmZpZy5zd2FnZ2VyLmJhc2VQYXRoICsgY29uZmlnLnN3YWdnZXIuZGVsZXRlU2VydmVyLAogICAgICAgIG1ldGhvZDogJ0RFTEVURScsCiAgICAgICAgZGF0YTogewogICAgICAgICAgaWQ6IGlkCiAgICAgICAgfQogICAgICB9OwogICAgICBheGlvcyhyZXF1ZXN0Q29uZmlnKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICBWdWUuJHRvYXN0LnN1Y2Nlc3MoIlNlcnZlciByZW1vdmUgc3VjY2Vzc2Z1bGx5Iik7CiAgICAgICAgZGlzcGF0Y2goJ2dldFNlcnZlckxpc3QnKTsKICAgICAgICBjYiAmJiBjYigpOwogICAgICB9KVsiY2F0Y2giXShmdW5jdGlvbiAoKSB7CiAgICAgICAgVnVlLiR0b2FzdC5lcnJvcigiRmFpbCB0byBkZWxldGUgc2VydmVyIik7CiAgICAgIH0pOwogICAgfSwKICAgIGdldFNlcnZlckFwaURvYzogZnVuY3Rpb24gZ2V0U2VydmVyQXBpRG9jKF8sIF9yZWY2KSB7CiAgICAgIHZhciBzZXJ2ZXIgPSBfcmVmNi5zZXJ2ZXIsCiAgICAgICAgICBjYiA9IF9yZWY2LmNiLAogICAgICAgICAgZmFpbCA9IF9yZWY2LmZhaWw7CiAgICAgIHZhciByZXF1ZXN0Q29uZmlnID0gewogICAgICAgIHVybDogY29uZmlnLnN3YWdnZXIuYmFzZVBhdGggKyBjb25maWcuc3dhZ2dlci5wcm94eSwKICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICBkYXRhOiB7CiAgICAgICAgICBwcm90bzogc2VydmVyLnByb3RvLAogICAgICAgICAgYmFzZVVybDogc2VydmVyLmVuZHBvaW50LAogICAgICAgICAgdXJsOiBzZXJ2ZXIuZG9jUGF0aCwKICAgICAgICAgIG1ldGhvZDogJ0dFVCcsCiAgICAgICAgICBxdWVyeToge30sCiAgICAgICAgICBwYXJhbXM6IHt9LAogICAgICAgICAgaGVhZGVyczoge30KICAgICAgICB9CiAgICAgIH07CiAgICAgIGF4aW9zKHJlcXVlc3RDb25maWcpLnRoZW4oY2IpWyJjYXRjaCJdKGZhaWwpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/home/microhawk/github/webish/client/store/swagger.js"],"names":["axios","config","Vue","namespaced","state","serverList","serverLoaded","apiDocs","selectedServer","proxyPath","swagger","basePath","proxy","mutations","setServerList","SET_API_DOC","docs","SET_SELECTED_SERVER","server","actions","getServerList","commit","requestConfig","url","getAllServers","method","then","e","data","saveServer","dispatch","cb","addServer","$toast","success","error","deleteServer","id","getServerApiDoc","_","fail","proto","baseUrl","endpoint","docPath","query","params","headers"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport config from '../../common/routerPath.json'\nimport Vue from 'vue'\nexport default {\n  namespaced: true,\n  state: {\n    serverList: [],\n    serverLoaded: false,\n    apiDocs: null,\n    selectedServer: null,\n    proxyPath: config.swagger.basePath + config.swagger.proxy\n  },\n  mutations: {\n    setServerList (state, serverList) {\n      state.serverList = serverList\n      state.serverLoaded = true\n    },\n    SET_API_DOC (state, docs) {\n      state.apiDocs = docs\n    },\n    SET_SELECTED_SERVER (state, server) {\n      state.selectedServer = server\n    }\n  },\n  actions: {\n\n    getServerList ({commit}) {\n      const requestConfig = {\n        url: config.swagger.basePath + config.swagger.getAllServers,\n        method: 'GET'\n      }\n      axios(requestConfig).then(e => commit('setServerList', e.data))\n    },\n\n    saveServer ({dispatch}, { data, cb }) {\n      const requestConfig = {\n        url: config.swagger.basePath + config.swagger.addServer,\n        method: 'POST',\n        data: data\n      }\n      axios(requestConfig).then(() => {\n        Vue.$toast.success(\"Server created successfully\")\n        dispatch('getServerList')\n        cb()\n      }).catch(() => {\n        Vue.$toast.error(\"Failed to save server\")\n      })\n    },\n\n    deleteServer ({dispatch}, {id, cb}) {\n      const requestConfig = {\n        url: config.swagger.basePath + config.swagger.deleteServer,\n        method: 'DELETE',\n        data: {id}\n      }\n      axios(requestConfig).then(() => {\n        Vue.$toast.success(\"Server remove successfully\")\n        dispatch('getServerList')\n        cb && cb()\n      }).catch(() => {\n        Vue.$toast.error(\"Fail to delete server\")\n      })\n\n    },\n\n    getServerApiDoc (_, {server, cb, fail}) {\n      const requestConfig = {\n        url: config.swagger.basePath + config.swagger.proxy,\n        method: 'POST',\n        data: {\n          proto: server.proto,\n          baseUrl: server.endpoint,\n          url: server.docPath,\n          method: 'GET',\n          query: {},\n          params: {},\n          headers: {}\n        }\n      }\n      axios(requestConfig).then(cb).catch(fail)\n    }\n  }\n}"]}]}