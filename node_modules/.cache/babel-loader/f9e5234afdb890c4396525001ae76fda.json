{"remainingRequest":"/home/microhawk/github/webish/node_modules/babel-loader/lib/index.js!/home/microhawk/github/webish/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/microhawk/github/webish/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/microhawk/github/webish/client/components/swaggerApiDoc/swagger.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/microhawk/github/webish/client/components/swaggerApiDoc/swagger.vue","mtime":1662182788537},{"path":"/home/microhawk/github/webish/node_modules/cache-loader/dist/cjs.js","mtime":1662182844115},{"path":"/home/microhawk/github/webish/node_modules/babel-loader/lib/index.js","mtime":1662182845501},{"path":"/home/microhawk/github/webish/node_modules/cache-loader/dist/cjs.js","mtime":1662182844115},{"path":"/home/microhawk/github/webish/node_modules/vue-loader/lib/index.js","mtime":1662182845851}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvbWljcm9oYXdrL2dpdGh1Yi93ZWJpc2gvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICd2dWV4JzsKaW1wb3J0IEFwaURvY3MgZnJvbSAnLi9zd2FnZ2VyL2FwaURvY3MudnVlJzsKaW1wb3J0IERvY0NvbXBpbGVFcnJvciBmcm9tICcuL3N3YWdnZXIvZG9jQ29tcGlsZUVycm9yLnZ1ZSc7CmltcG9ydCBMb2FkaW5nU2VydmVyIGZyb20gJy4vc3dhZ2dlci9sb2FkaW5nU2VydmVyLnZ1ZSc7CmltcG9ydCBub1NlcnZlciBmcm9tICcuL3N3YWdnZXIvbm9TZXJ2ZXIudnVlJzsKaW1wb3J0IFNlcnZlckVycm9yIGZyb20gJy4vc3dhZ2dlci9zZXJ2ZXJFcnJvci52dWUnOwppbXBvcnQgc3dhZ2dlckRvY0Zvcm1hdHRlciBmcm9tICdAL2hlbHBlci9zd2FnZ2VyLWRvYy5qcyc7CmltcG9ydCBvcGVuYXBpRG9jRm9ybWF0dGVyIGZyb20gJ0AvaGVscGVyL29wZW5hcGktZG9jLmpzJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIERvY0NvbXBpbGVFcnJvcjogRG9jQ29tcGlsZUVycm9yLAogICAgTG9hZGluZ1NlcnZlcjogTG9hZGluZ1NlcnZlciwKICAgIG5vU2VydmVyOiBub1NlcnZlciwKICAgIFNlcnZlckVycm9yOiBTZXJ2ZXJFcnJvciwKICAgIEFwaURvY3M6IEFwaURvY3MKICB9LAogIG5hbWU6ICdTd2FnZ2VyJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgb3BlblNlcnZlcjogJycsCiAgICAgIHN0YXR1czogMiwKICAgICAgZXJyb3I6IHt9LAogICAgICBjb21waWxlRXJyb3I6IGZhbHNlLAogICAgICBhcGlEb2NzOiBudWxsLAogICAgICBjb21waWxlRXJyb3JNZXNzYWdlOiAnJwogICAgfTsKICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG1hcFN0YXRlKCdzd2FnZ2VyJywgWydzZXJ2ZXJMaXN0J10pKSwge30sIHsKICAgIHNlbGVjdGVkU2VydmVyOiBmdW5jdGlvbiBzZWxlY3RlZFNlcnZlcigpIHsKICAgICAgcmV0dXJuIHRoaXMuc2VydmVyTGlzdFt0aGlzLm9wZW5TZXJ2ZXJdIHx8IG51bGw7CiAgICB9LAogICAgc2hvd0xvYWRpbmdTZXJ2ZXI6IGZ1bmN0aW9uIHNob3dMb2FkaW5nU2VydmVyKCkgewogICAgICByZXR1cm4gdGhpcy5zZWxlY3RlZFNlcnZlciAmJiB0aGlzLnN0YXR1cyA9PT0gMDsKICAgIH0sCiAgICBzaG93U2VydmVyRXJyb3I6IGZ1bmN0aW9uIHNob3dTZXJ2ZXJFcnJvcigpIHsKICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0ZWRTZXJ2ZXIgJiYgdGhpcy5zdGF0dXMgPT09IC0xOwogICAgfSwKICAgIHNob3dDb21waWxlRXJyb3I6IGZ1bmN0aW9uIHNob3dDb21waWxlRXJyb3IoKSB7CiAgICAgIHJldHVybiB0aGlzLnNlbGVjdGVkU2VydmVyICYmIHRoaXMuc3RhdHVzID09PSAxICYmIHRoaXMuY29tcGlsZUVycm9yOwogICAgfSwKICAgIHNob3dBcGlEb2M6IGZ1bmN0aW9uIHNob3dBcGlEb2MoKSB7CiAgICAgIHJldHVybiAhdGhpcy5zaG93Q29tcGlsZUVycm9yOwogICAgfQogIH0pLAogIHdhdGNoOiB7CiAgICBvcGVuU2VydmVyOiBmdW5jdGlvbiBvcGVuU2VydmVyKCkgewogICAgICBpZiAodGhpcy5zZWxlY3RlZFNlcnZlcikgewogICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnc3dhZ2dlci9TRVRfU0VMRUNURURfU0VSVkVSJywgdGhpcy5zZWxlY3RlZFNlcnZlcik7CiAgICAgICAgdGhpcy5mZXRjaEFwaURvY3MoKTsKICAgICAgfQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgY2hhbmdlU2VydmVyOiBmdW5jdGlvbiBjaGFuZ2VTZXJ2ZXIoKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBwYXRoOiAnJywKICAgICAgICBxdWVyeTogewogICAgICAgICAgc2VydmVyOiB0aGlzLm9wZW5TZXJ2ZXIKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGZldGNoQ29tcGxldGVkOiBmdW5jdGlvbiBmZXRjaENvbXBsZXRlZChyZXMpIHsKICAgICAgaWYgKHJlcy5kYXRhLmVycm9yKSB7CiAgICAgICAgdGhpcy5zdGF0dXMgPSAtMTsKICAgICAgICB0aGlzLmVycm9yID0gcmVzLmRhdGEuZXJyb3JNZXNzYWdlOwogICAgICB9IGVsc2UgewogICAgICAgIHRyeSB7CiAgICAgICAgICB0aGlzLmFwaURvY3MgPSByZXMuZGF0YS5yZXNwb25zZUJvZHkub3BlbmFwaSA/IG9wZW5hcGlEb2NGb3JtYXR0ZXIocmVzLmRhdGEucmVzcG9uc2VCb2R5KSA6IHN3YWdnZXJEb2NGb3JtYXR0ZXIocmVzLmRhdGEucmVzcG9uc2VCb2R5KTsKICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnc3dhZ2dlci9TRVRfQVBJX0RPQycsIHRoaXMuYXBpRG9jcyk7CiAgICAgICAgICB0aGlzLmNvbXBpbGVFcnJvciA9IGZhbHNlOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZSk7CiAgICAgICAgICB0aGlzLmNvbXBpbGVFcnJvck1lc3NhZ2UgPSBlLm1lc3NhZ2U7CiAgICAgICAgICB0aGlzLmNvbXBpbGVFcnJvciA9IHRydWU7CiAgICAgICAgfQoKICAgICAgICB0aGlzLnN0YXR1cyA9IDE7CiAgICAgIH0KICAgIH0sCiAgICBmZXRjaEFwaURvY3M6IGZ1bmN0aW9uIGZldGNoQXBpRG9jcygpIHsKICAgICAgdGhpcy5zdGF0dXMgPSAwOwogICAgICB2YXIgc2VsZiA9IHRoaXM7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdzd2FnZ2VyL2dldFNlcnZlckFwaURvYycsIHsKICAgICAgICBzZXJ2ZXI6IHsKICAgICAgICAgIG5hbWU6IHNlbGYuc2VsZWN0ZWRTZXJ2ZXIubmFtZSwKICAgICAgICAgIHByb3RvOiBzZWxmLnNlbGVjdGVkU2VydmVyLnByb3RvLAogICAgICAgICAgZW5kcG9pbnQ6IHNlbGYuc2VsZWN0ZWRTZXJ2ZXIuZW5kcG9pbnQsCiAgICAgICAgICBkb2NQYXRoOiBzZWxmLnNlbGVjdGVkU2VydmVyLmRvY1BhdGgKICAgICAgICB9LAogICAgICAgIGNiOiB0aGlzLmZldGNoQ29tcGxldGVkCiAgICAgIH0pOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMub3BlblNlcnZlciA9IHRoaXMuJHJvdXRlLnF1ZXJ5LnNlcnZlciB8fCAnJzsKICB9Cn07"},{"version":3,"sources":["swagger.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"api-docs pb-20\">\n    <div class=\"v-center space-between my-5\">\n      <h2 class=\"tx-x-lg tx-light\">Select your server</h2>\n      <div class=\"p-input\">\n        <select v-model=\"openServer\" @change=\"changeServer\">\n          <option v-for=\"server in serverList\" :key=\"server.id\" :value=\"server.id\">{{server.name}}</option>\n        </select>\n        <label>Server</label>\n      </div>\n    </div>\n    <no-server v-if=\"!selectedServer\"/>\n    <loading-server v-else-if=\"showLoadingServer\"/>\n    <server-error :error=\"error\" v-else-if=\"showServerError\" @retry=\"fetchApiDocs\"/>\n    <doc-compile-error :error=\"{message: compileErrorMessage, }\" v-else-if=\"showCompileError\"/>\n    <api-docs v-else :apiDocs=\"apiDocs\"/>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nimport ApiDocs from './swagger/apiDocs.vue'\nimport DocCompileError from './swagger/docCompileError.vue'\nimport LoadingServer from './swagger/loadingServer.vue'\nimport noServer from './swagger/noServer.vue'\nimport ServerError from './swagger/serverError.vue'\n\nimport swaggerDocFormatter from '@/helper/swagger-doc.js'\nimport openapiDocFormatter from '@/helper/openapi-doc.js'\nexport default {\n  components: { DocCompileError, LoadingServer, noServer, ServerError, ApiDocs },\n  name: 'Swagger',\n  data: () => ({\n    openServer: '',\n    status: 2,\n    error: {},\n    compileError: false,\n    apiDocs: null,\n    compileErrorMessage: ''\n  }),\n  computed: {\n    ...mapState('swagger', ['serverList']),\n    selectedServer () {\n      return this.serverList[this.openServer] || null\n    },\n    showLoadingServer () {\n      return this.selectedServer && this.status === 0\n    },\n    showServerError () {\n      return this.selectedServer && this.status === -1\n    },\n    showCompileError () {\n      return this.selectedServer && this.status === 1 && this.compileError\n    },\n    showApiDoc () {\n      return !this.showCompileError\n    }\n  },\n  watch: {\n    openServer () {\n      if (this.selectedServer) {\n        this.$store.commit('swagger/SET_SELECTED_SERVER', this.selectedServer)\n        this.fetchApiDocs()\n      }\n    }\n  },\n  methods: {\n    changeServer () {\n      this.$router.push({\n        path: '',\n        query: {\n          server: this.openServer\n        }\n      })\n    },\n    fetchCompleted (res) {\n      if (res.data.error) {\n        this.status = -1\n        this.error = res.data.errorMessage\n      } else {\n        try {\n          this.apiDocs = res.data.responseBody.openapi ?\n            openapiDocFormatter(res.data.responseBody) :\n            swaggerDocFormatter(res.data.responseBody)\n          this.$store.commit('swagger/SET_API_DOC', this.apiDocs)\n          this.compileError = false\n        } catch (e) {\n          console.error(e)\n          this.compileErrorMessage = e.message\n          this.compileError = true\n        }\n        this.status = 1\n      }\n    },\n    fetchApiDocs () {\n      this.status = 0\n      const self = this\n      this.$store.dispatch('swagger/getServerApiDoc', {\n        server: {\n          name: self.selectedServer.name,\n          proto: self.selectedServer.proto,\n          endpoint: self.selectedServer.endpoint,\n          docPath: self.selectedServer.docPath\n        },\n        cb: this.fetchCompleted\n      })\n    }\n  },\n  created () {\n    this.openServer = this.$route.query.server || ''\n  }\n}\n</script>\n\n<style>\n\n</style>"],"sourceRoot":"client/components/swaggerApiDoc"}]}