{"remainingRequest":"/home/microhawk/github/webish/node_modules/babel-loader/lib/index.js!/home/microhawk/github/webish/node_modules/eslint-loader/index.js??ref--13-0!/home/microhawk/github/webish/client/helper/openapi-doc.js","dependencies":[{"path":"/home/microhawk/github/webish/client/helper/openapi-doc.js","mtime":1662182788537},{"path":"/home/microhawk/github/webish/node_modules/cache-loader/dist/cjs.js","mtime":1662182844115},{"path":"/home/microhawk/github/webish/node_modules/babel-loader/lib/index.js","mtime":1662182845501},{"path":"/home/microhawk/github/webish/node_modules/eslint-loader/index.js","mtime":1662182844238}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvaG9tZS9taWNyb2hhd2svZ2l0aHViL3dlYmlzaC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5kZXNjcmlwdGlvbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIudXJsLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc2V0LmpzIjsKdmFyIHByZW1pdGl2ZSA9IFsnc3RyaW5nJywgJ2ludGVnZXInLCAnYm9vbGVhbicsICdsb25nJywgJ2RvdWJsZSddOwp2YXIgcHJlbWl0aXZlVmFsdWUgPSB7CiAgc3RyaW5nOiAnc3RyaW5nJywKICBpbnRlZ2VyOiAwLAogICJib29sZWFuIjogZmFsc2UsCiAgImxvbmciOiAwLAogICJkb3VibGUiOiAwCn07Cgp2YXIgb2JqZWN0Q29uc3RydWN0b3IgPSBmdW5jdGlvbiBvYmplY3RDb25zdHJ1Y3Rvcihwcm9wZXJ0eSwgZGVmaW5pdGlvbnMpIHsKICBpZiAoJ3R5cGUnIGluIHByb3BlcnR5KSB7CiAgICBpZiAocHJvcGVydHkudHlwZSA9PT0gJ29iamVjdCcpIHsKICAgICAgdmFyIGNsYXNzT2JqID0ge307CgogICAgICBpZiAoJ2FkZGl0aW9uYWxQcm9wZXJ0aWVzJyBpbiBwcm9wZXJ0eSkgewogICAgICAgIGNsYXNzT2JqLk1hcEtleSA9IG9iamVjdENvbnN0cnVjdG9yKHByb3BlcnR5LmFkZGl0aW9uYWxQcm9wZXJ0aWVzLCBkZWZpbml0aW9ucyk7CiAgICAgIH0KCiAgICAgIGZvciAodmFyIHByb3AgaW4gcHJvcGVydHkucHJvcGVydGllcyB8fCB7fSkgewogICAgICAgIGNsYXNzT2JqW3Byb3BdID0gb2JqZWN0Q29uc3RydWN0b3IocHJvcGVydHkucHJvcGVydGllc1twcm9wXSwgZGVmaW5pdGlvbnMpOwogICAgICB9CgogICAgICByZXR1cm4gY2xhc3NPYmo7CiAgICB9IGVsc2UgaWYgKHByZW1pdGl2ZS5pbmNsdWRlcyhwcm9wZXJ0eS50eXBlKSkgewogICAgICByZXR1cm4gcHJlbWl0aXZlVmFsdWVbcHJvcGVydHkudHlwZV07CiAgICB9IGVsc2UgaWYgKHByb3BlcnR5LnR5cGUgPT09ICdhcnJheScpIHsKICAgICAgcmV0dXJuIFtvYmplY3RDb25zdHJ1Y3Rvcihwcm9wZXJ0eS5pdGVtcywgZGVmaW5pdGlvbnMpXTsKICAgIH0KICB9CgogIGlmICgnJHJlZicgaW4gcHJvcGVydHkpIHsKICAgIHJldHVybiBkZWZpbml0aW9uc1twcm9wZXJ0eS4kcmVmLnNwbGl0KCcvJylbM11dID8gb2JqZWN0Q29uc3RydWN0b3IoZGVmaW5pdGlvbnNbcHJvcGVydHkuJHJlZi5zcGxpdCgnLycpWzNdXSwgZGVmaW5pdGlvbnMpIDoge307CiAgfQp9OwoKdmFyIHBhcmFtZXRlckZvcm1hdHRlciA9IGZ1bmN0aW9uIHBhcmFtZXRlckZvcm1hdHRlcihwYXJhbWV0ZXIpIHsKICB2YXIgb2JqID0ge307CiAgb2JqLm5hbWUgPSBwYXJhbWV0ZXIubmFtZTsKICBvYmouZGVzY3JpcHRpb24gPSBwYXJhbWV0ZXIuZGVzY3JpcHRpb247CiAgb2JqLnJlcXVpcmVkID0gcGFyYW1ldGVyLnJlcXVpcmVkOwogIG9iai5oYXNPcHRpb25zID0gJ2VudW0nIGluIHBhcmFtZXRlci5zY2hlbWE7CgogIGlmIChvYmouaGFzT3B0aW9ucykgewogICAgb2JqLm9wdGlvbnMgPSBwYXJhbWV0ZXIuc2NoZW1hWyJlbnVtIl07CiAgfQoKICBvYmoudHlwZSA9IHBhcmFtZXRlci5zY2hlbWEudHlwZTsKICBvYmoudmFsdWUgPSBwYXJhbWV0ZXJbImRlZmF1bHQiXSB8fCAnJzsKICByZXR1cm4gb2JqOwp9OwoKdmFyIGFwaUNvbnN0cnVjdG9yID0gZnVuY3Rpb24gYXBpQ29uc3RydWN0b3IocGF0aCwgbWV0aG9kLCBkYXRhKSB7CiAgdmFyIGFwaU9iamVjdCA9IGRhdGEucGF0aHNbcGF0aF1bbWV0aG9kXTsKICB2YXIgcmVzT2JqID0ge307CiAgcmVzT2JqLnBhdGggPSBwYXRoOwogIHJlc09iai5tZXRob2QgPSBtZXRob2Q7CiAgcmVzT2JqLnN1bW1hcnkgPSBhcGlPYmplY3Quc3VtbWFyeSB8fCAnJzsKICByZXNPYmouZGVzY3JpcHRpb24gPSBhcGlPYmplY3QuZGVzY3JpcHRpb24gfHwgJyc7CiAgcmVzT2JqLmNvbnN1bWVzID0gYXBpT2JqZWN0LmNvbnN1bWVzIHx8IFtdOwogIHJlc09iai5wcm9kdWNlcyA9IGFwaU9iamVjdC5wcm9kdWNlcyB8fCBbXTsKICBhcGlPYmplY3QucGFyYW1ldGVycyA9IGFwaU9iamVjdC5wYXJhbWV0ZXJzIHx8IFtdOwogIHJlc09iai5wYXRoUGFyYW0gPSBhcGlPYmplY3QucGFyYW1ldGVycy5maWx0ZXIoZnVuY3Rpb24gKHBhcmFtZXRlcikgewogICAgcmV0dXJuIHBhcmFtZXRlclsiaW4iXSA9PT0gJ3BhdGgnOwogIH0pLm1hcChwYXJhbWV0ZXJGb3JtYXR0ZXIpOwogIHJlc09iai5xdWVyeSA9IGFwaU9iamVjdC5wYXJhbWV0ZXJzLmZpbHRlcihmdW5jdGlvbiAocGFyYW1ldGVyKSB7CiAgICByZXR1cm4gcGFyYW1ldGVyWyJpbiJdID09PSAncXVlcnknOwogIH0pLm1hcChwYXJhbWV0ZXJGb3JtYXR0ZXIpOwogIHJlc09iai5oZWFkZXIgPSBhcGlPYmplY3QucGFyYW1ldGVycy5maWx0ZXIoZnVuY3Rpb24gKHBhcmFtZXRlcikgewogICAgcmV0dXJuIHBhcmFtZXRlclsiaW4iXSA9PT0gJ2hlYWRlcic7CiAgfSkubWFwKHBhcmFtZXRlckZvcm1hdHRlcik7CgogIGlmIChyZXNPYmoubWV0aG9kICE9PSAnZ2V0JyAmJiBhcGlPYmplY3QucmVxdWVzdEJvZHkpIHsKICAgIGNvbnNvbGUubG9nKGFwaU9iamVjdCk7CiAgICBPYmplY3Qua2V5cyhhcGlPYmplY3QucmVxdWVzdEJvZHkuY29udGVudCkuZm9yRWFjaChmdW5jdGlvbiAoZSkgewogICAgICByZXNPYmouY29uc3VtZXMucHVzaChlKTsKICAgICAgcmVzT2JqLmJvZHkgPSBvYmplY3RDb25zdHJ1Y3RvcihhcGlPYmplY3QucmVxdWVzdEJvZHkuY29udGVudFtlXS5zY2hlbWEsIGRhdGEuY29tcG9uZW50cy5zY2hlbWFzKTsKICAgIH0pOwogIH0KCiAgT2JqZWN0LmtleXMoYXBpT2JqZWN0LnJlc3BvbnNlcykuZm9yRWFjaChmdW5jdGlvbiAoc3RhdHVzKSB7CiAgICBpZiAoYXBpT2JqZWN0LnJlc3BvbnNlc1tzdGF0dXNdLmNvbnRlbnQpIHsKICAgICAgT2JqZWN0LmtleXMoYXBpT2JqZWN0LnJlc3BvbnNlc1tzdGF0dXNdLmNvbnRlbnQpLmZvckVhY2goZnVuY3Rpb24gKGUpIHsKICAgICAgICByZXNPYmoucHJvZHVjZXMucHVzaChlKTsKICAgICAgICByZXNPYmoucmVzcG9uc2UgPSBvYmplY3RDb25zdHJ1Y3RvcihhcGlPYmplY3QucmVzcG9uc2VzW3N0YXR1c10uY29udGVudFtlXS5zY2hlbWEsIGRhdGEuY29tcG9uZW50cy5zY2hlbWFzKTsKICAgICAgfSk7CiAgICB9CiAgfSk7CiAgcmV0dXJuIHJlc09iajsKfTsKCnZhciBvcGVuQXBpRG9jRm9ybWF0dGVyID0gZnVuY3Rpb24gb3BlbkFwaURvY0Zvcm1hdHRlcihkYXRhKSB7CiAgdmFyIGNvbnRyb2xsZXJzID0ge307CiAgdmFyIHVybCA9IG5ldyBVUkwoZGF0YS5zZXJ2ZXJzWzBdLnVybCk7CiAgdmFyIHRhZ3MgPSBbXTsKCiAgZm9yICh2YXIgcGF0aCBpbiBkYXRhLnBhdGhzIHx8IHt9KSB7CiAgICBmb3IgKHZhciBtZXRob2QgaW4gZGF0YS5wYXRoc1twYXRoXSB8fCB7fSkgewogICAgICB0YWdzID0gW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheSh0YWdzKSwgX3RvQ29uc3VtYWJsZUFycmF5KGRhdGEucGF0aHNbcGF0aF1bbWV0aG9kXS50YWdzKSk7CiAgICB9CiAgfQoKICB0YWdzID0gX3RvQ29uc3VtYWJsZUFycmF5KG5ldyBTZXQodGFncykpOwogIHRhZ3MuZm9yRWFjaChmdW5jdGlvbiAoZSkgewogICAgY29udHJvbGxlcnNbZV0gPSB7CiAgICAgIG5hbWU6IGUsCiAgICAgIGRlc2NyaXB0aW9uOiBlLAogICAgICBhcGlzOiBbXQogICAgfTsKICB9KTsKICBPYmplY3Qua2V5cyhkYXRhLnBhdGhzKS5mb3JFYWNoKGZ1bmN0aW9uIChwYXRoKSB7CiAgICB2YXIgcGF0aENvbmZpZyA9IGRhdGEucGF0aHNbcGF0aF07CiAgICBPYmplY3Qua2V5cyhwYXRoQ29uZmlnKS5mb3JFYWNoKGZ1bmN0aW9uIChtZXRob2QpIHsKICAgICAgcGF0aENvbmZpZ1ttZXRob2RdLnRhZ3MuZm9yRWFjaChmdW5jdGlvbiAodGFnKSB7CiAgICAgICAgY29udHJvbGxlcnNbdGFnXS5hcGlzLnB1c2goYXBpQ29uc3RydWN0b3IocGF0aCwgbWV0aG9kLCBkYXRhLCB1cmwpKTsKICAgICAgfSk7CiAgICB9KTsKICB9KTsKICByZXR1cm4gewogICAgaG9zdDogdXJsLmhvc3QsCiAgICBiYXNlUGF0aDogdXJsLnBhdGhuYW1lLAogICAgaW5mbzogZGF0YS5pbmZvLAogICAgc3dhZ2dlcjogZGF0YS5vcGVuYXBpLAogICAgY29udHJvbGxlcnM6IGNvbnRyb2xsZXJzCiAgfTsKfTsKCmV4cG9ydCBkZWZhdWx0IG9wZW5BcGlEb2NGb3JtYXR0ZXI7"},{"version":3,"sources":["/home/microhawk/github/webish/client/helper/openapi-doc.js"],"names":["premitive","premitiveValue","string","integer","objectConstructor","property","definitions","type","classObj","MapKey","additionalProperties","prop","properties","includes","items","$ref","split","parameterFormatter","parameter","obj","name","description","required","hasOptions","schema","options","value","apiConstructor","path","method","data","apiObject","paths","resObj","summary","consumes","produces","parameters","pathParam","filter","map","query","header","requestBody","console","log","Object","keys","content","forEach","e","push","body","components","schemas","responses","status","response","openApiDocFormatter","controllers","url","URL","servers","tags","Set","apis","pathConfig","tag","host","basePath","pathname","info","swagger","openapi"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAG,CAAC,QAAD,EAAW,SAAX,EAAsB,SAAtB,EAAiC,MAAjC,EAAyC,QAAzC,CAAlB;AACA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,QADa;AAErBC,EAAAA,OAAO,EAAE,CAFY;AAGrB,aAAS,KAHY;AAIrB,UAAM,CAJe;AAKrB,YAAQ;AALa,CAAvB;;AAOA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,QAAD,EAAWC,WAAX,EAA2B;AACnD,MAAI,UAAUD,QAAd,EAAwB;AACtB,QAAIA,QAAQ,CAACE,IAAT,KAAkB,QAAtB,EAAgC;AAC9B,UAAMC,QAAQ,GAAG,EAAjB;;AACA,UAAI,0BAA0BH,QAA9B,EAAwC;AACtCG,QAAAA,QAAQ,CAACC,MAAT,GAAkBL,iBAAiB,CAACC,QAAQ,CAACK,oBAAV,EAAgCJ,WAAhC,CAAnC;AACD;;AACD,WAAK,IAAIK,IAAT,IAAiBN,QAAQ,CAACO,UAAT,IAAuB,EAAxC,EAA4C;AAC1CJ,QAAAA,QAAQ,CAACG,IAAD,CAAR,GAAiBP,iBAAiB,CAACC,QAAQ,CAACO,UAAT,CAAoBD,IAApB,CAAD,EAA4BL,WAA5B,CAAlC;AACD;;AACD,aAAOE,QAAP;AACD,KATD,MASO,IAAIR,SAAS,CAACa,QAAV,CAAmBR,QAAQ,CAACE,IAA5B,CAAJ,EAAuC;AAC5C,aAAON,cAAc,CAACI,QAAQ,CAACE,IAAV,CAArB;AACD,KAFM,MAEA,IAAIF,QAAQ,CAACE,IAAT,KAAkB,OAAtB,EAA+B;AACpC,aAAO,CAAEH,iBAAiB,CAACC,QAAQ,CAACS,KAAV,EAAiBR,WAAjB,CAAnB,CAAP;AACD;AACF;;AAAC,MAAI,UAAUD,QAAd,EAAwB;AACxB,WAAOC,WAAW,CAACD,QAAQ,CAACU,IAAT,CAAcC,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAD,CAAX,GAA2CZ,iBAAiB,CAACE,WAAW,CAACD,QAAQ,CAACU,IAAT,CAAcC,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAD,CAAZ,EAA2CV,WAA3C,CAA5D,GAAsH,EAA7H;AACD;AACF,CAnBD;;AAqBA,IAAMW,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,SAAD,EAAe;AACxC,MAAMC,GAAG,GAAG,EAAZ;AACAA,EAAAA,GAAG,CAACC,IAAJ,GAAWF,SAAS,CAACE,IAArB;AACAD,EAAAA,GAAG,CAACE,WAAJ,GAAkBH,SAAS,CAACG,WAA5B;AACAF,EAAAA,GAAG,CAACG,QAAJ,GAAeJ,SAAS,CAACI,QAAzB;AACAH,EAAAA,GAAG,CAACI,UAAJ,GAAiB,UAAUL,SAAS,CAACM,MAArC;;AACA,MAAIL,GAAG,CAACI,UAAR,EAAoB;AAClBJ,IAAAA,GAAG,CAACM,OAAJ,GAAcP,SAAS,CAACM,MAAV,QAAd;AACD;;AACDL,EAAAA,GAAG,CAACZ,IAAJ,GAAWW,SAAS,CAACM,MAAV,CAAiBjB,IAA5B;AACAY,EAAAA,GAAG,CAACO,KAAJ,GAAYR,SAAS,WAAT,IAAqB,EAAjC;AACA,SAAOC,GAAP;AACD,CAZD;;AAcA,IAAMQ,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAOC,MAAP,EAAeC,IAAf,EAAwB;AAC7C,MAAMC,SAAS,GAAGD,IAAI,CAACE,KAAL,CAAWJ,IAAX,EAAiBC,MAAjB,CAAlB;AACA,MAAMI,MAAM,GAAG,EAAf;AACAA,EAAAA,MAAM,CAACL,IAAP,GAAcA,IAAd;AACAK,EAAAA,MAAM,CAACJ,MAAP,GAAgBA,MAAhB;AACAI,EAAAA,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACG,OAAV,IAAqB,EAAtC;AACAD,EAAAA,MAAM,CAACZ,WAAP,GAAqBU,SAAS,CAACV,WAAV,IAAyB,EAA9C;AACAY,EAAAA,MAAM,CAACE,QAAP,GAAkBJ,SAAS,CAACI,QAAV,IAAuB,EAAzC;AACAF,EAAAA,MAAM,CAACG,QAAP,GAAkBL,SAAS,CAACK,QAAV,IAAsB,EAAxC;AACAL,EAAAA,SAAS,CAACM,UAAV,GAAuBN,SAAS,CAACM,UAAV,IAAwB,EAA/C;AACAJ,EAAAA,MAAM,CAACK,SAAP,GAAmBP,SAAS,CAACM,UAAV,CAAqBE,MAArB,CAA4B,UAAArB,SAAS;AAAA,WAAIA,SAAS,MAAT,KAAiB,MAArB;AAAA,GAArC,EAAkEsB,GAAlE,CAAsEvB,kBAAtE,CAAnB;AACAgB,EAAAA,MAAM,CAACQ,KAAP,GAAeV,SAAS,CAACM,UAAV,CAAqBE,MAArB,CAA4B,UAAArB,SAAS;AAAA,WAAIA,SAAS,MAAT,KAAiB,OAArB;AAAA,GAArC,EAAmEsB,GAAnE,CAAuEvB,kBAAvE,CAAf;AACAgB,EAAAA,MAAM,CAACS,MAAP,GAAgBX,SAAS,CAACM,UAAV,CAAqBE,MAArB,CAA4B,UAAArB,SAAS;AAAA,WAAIA,SAAS,MAAT,KAAiB,QAArB;AAAA,GAArC,EAAoEsB,GAApE,CAAwEvB,kBAAxE,CAAhB;;AACA,MAAIgB,MAAM,CAACJ,MAAP,KAAkB,KAAlB,IAA2BE,SAAS,CAACY,WAAzC,EAAuD;AACrDC,IAAAA,OAAO,CAACC,GAAR,CAAYd,SAAZ;AACAe,IAAAA,MAAM,CAACC,IAAP,CAAYhB,SAAS,CAACY,WAAV,CAAsBK,OAAlC,EAA2CC,OAA3C,CAAmD,UAAAC,CAAC,EAAI;AACtDjB,MAAAA,MAAM,CAACE,QAAP,CAAgBgB,IAAhB,CAAqBD,CAArB;AACAjB,MAAAA,MAAM,CAACmB,IAAP,GAAchD,iBAAiB,CAAC2B,SAAS,CAACY,WAAV,CAAsBK,OAAtB,CAA8BE,CAA9B,EAAiC1B,MAAlC,EAA0CM,IAAI,CAACuB,UAAL,CAAgBC,OAA1D,CAA/B;AACD,KAHD;AAID;;AACDR,EAAAA,MAAM,CAACC,IAAP,CAAYhB,SAAS,CAACwB,SAAtB,EAAiCN,OAAjC,CAAyC,UAAAO,MAAM,EAAI;AACjD,QAAIzB,SAAS,CAACwB,SAAV,CAAoBC,MAApB,EAA4BR,OAAhC,EAAyC;AACvCF,MAAAA,MAAM,CAACC,IAAP,CAAYhB,SAAS,CAACwB,SAAV,CAAoBC,MAApB,EAA4BR,OAAxC,EAAiDC,OAAjD,CAAyD,UAAAC,CAAC,EAAI;AAC5DjB,QAAAA,MAAM,CAACG,QAAP,CAAgBe,IAAhB,CAAqBD,CAArB;AACAjB,QAAAA,MAAM,CAACwB,QAAP,GAAkBrD,iBAAiB,CAAC2B,SAAS,CAACwB,SAAV,CAAoBC,MAApB,EAA4BR,OAA5B,CAAoCE,CAApC,EAAuC1B,MAAxC,EAAgDM,IAAI,CAACuB,UAAL,CAAgBC,OAAhE,CAAnC;AACD,OAHD;AAID;AACF,GAPD;AAQA,SAAOrB,MAAP;AACD,CA7BD;;AAgCA,IAAMyB,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAC5B,IAAD,EAAU;AACpC,MAAI6B,WAAW,GAAG,EAAlB;AACA,MAAMC,GAAG,GAAG,IAAIC,GAAJ,CAAQ/B,IAAI,CAACgC,OAAL,CAAa,CAAb,EAAgBF,GAAxB,CAAZ;AAEA,MAAIG,IAAI,GAAG,EAAX;;AAEA,OAAK,IAAMnC,IAAX,IAAmBE,IAAI,CAACE,KAAL,IAAc,EAAjC,EAAqC;AACnC,SAAK,IAAMH,MAAX,IAAqBC,IAAI,CAACE,KAAL,CAAWJ,IAAX,KAAoB,EAAzC,EAA6C;AAC3CmC,MAAAA,IAAI,gCAAOA,IAAP,sBAAgBjC,IAAI,CAACE,KAAL,CAAWJ,IAAX,EAAiBC,MAAjB,EAAyBkC,IAAzC,EAAJ;AACD;AACF;;AAEDA,EAAAA,IAAI,sBAAO,IAAIC,GAAJ,CAAQD,IAAR,CAAP,CAAJ;AAEAA,EAAAA,IAAI,CAACd,OAAL,CAAa,UAAAC,CAAC,EAAI;AAChBS,IAAAA,WAAW,CAACT,CAAD,CAAX,GAAiB;AAAC9B,MAAAA,IAAI,EAAE8B,CAAP;AAAU7B,MAAAA,WAAW,EAAE6B,CAAvB;AAA2Be,MAAAA,IAAI,EAAE;AAAjC,KAAjB;AACD,GAFD;AAIAnB,EAAAA,MAAM,CAACC,IAAP,CAAYjB,IAAI,CAACE,KAAjB,EAAwBiB,OAAxB,CAAgC,UAAArB,IAAI,EAAI;AACtC,QAAMsC,UAAU,GAAGpC,IAAI,CAACE,KAAL,CAAWJ,IAAX,CAAnB;AACAkB,IAAAA,MAAM,CAACC,IAAP,CAAYmB,UAAZ,EAAwBjB,OAAxB,CAAgC,UAAApB,MAAM,EAAI;AACxCqC,MAAAA,UAAU,CAACrC,MAAD,CAAV,CAAmBkC,IAAnB,CAAwBd,OAAxB,CAAgC,UAAAkB,GAAG,EAAI;AACrCR,QAAAA,WAAW,CAACQ,GAAD,CAAX,CAAiBF,IAAjB,CAAsBd,IAAtB,CAA2BxB,cAAc,CAACC,IAAD,EAAOC,MAAP,EAAeC,IAAf,EAAqB8B,GAArB,CAAzC;AACD,OAFD;AAGD,KAJD;AAKD,GAPD;AASA,SAAO;AACLQ,IAAAA,IAAI,EAAER,GAAG,CAACQ,IADL;AAELC,IAAAA,QAAQ,EAAET,GAAG,CAACU,QAFT;AAGLC,IAAAA,IAAI,EAAEzC,IAAI,CAACyC,IAHN;AAILC,IAAAA,OAAO,EAAE1C,IAAI,CAAC2C,OAJT;AAKLd,IAAAA,WAAW,EAAXA;AALK,GAAP;AAOD,CAlCD;;AAoCA,eAAeD,mBAAf","sourcesContent":["const premitive = ['string', 'integer', 'boolean', 'long', 'double']\nconst premitiveValue = {\n  string: 'string',\n  integer: 0,\n  boolean: false,\n  long: 0,\n  double: 0,\n}\nconst objectConstructor = (property, definitions) => {\n  if ('type' in property) {\n    if (property.type === 'object') {\n      const classObj = {}\n      if ('additionalProperties' in property) {\n        classObj.MapKey = objectConstructor(property.additionalProperties, definitions )\n      }\n      for (let prop in property.properties || {}) {\n        classObj[prop] = objectConstructor(property.properties[prop], definitions )\n      }\n      return classObj\n    } else if (premitive.includes(property.type)) {\n      return premitiveValue[property.type]\n    } else if (property.type === 'array') {\n      return [ objectConstructor(property.items, definitions) ]\n    }\n  } if ('$ref' in property) {\n    return definitions[property.$ref.split('/')[3]] ? objectConstructor(definitions[property.$ref.split('/')[3]], definitions) : {}\n  }\n}\n\nconst parameterFormatter = (parameter) => {\n  const obj = {}\n  obj.name = parameter.name\n  obj.description = parameter.description\n  obj.required = parameter.required\n  obj.hasOptions = 'enum' in parameter.schema\n  if (obj.hasOptions) {\n    obj.options = parameter.schema.enum\n  }\n  obj.type = parameter.schema.type\n  obj.value = parameter.default || ''\n  return obj\n}\n\nconst apiConstructor = (path, method, data) => {\n  const apiObject = data.paths[path][method]\n  const resObj = {}\n  resObj.path = path\n  resObj.method = method\n  resObj.summary = apiObject.summary || ''\n  resObj.description = apiObject.description || ''\n  resObj.consumes = apiObject.consumes  || []\n  resObj.produces = apiObject.produces || []\n  apiObject.parameters = apiObject.parameters || []\n  resObj.pathParam = apiObject.parameters.filter(parameter => parameter.in === 'path').map(parameterFormatter)\n  resObj.query = apiObject.parameters.filter(parameter => parameter.in === 'query').map(parameterFormatter)\n  resObj.header = apiObject.parameters.filter(parameter => parameter.in === 'header').map(parameterFormatter)\n  if (resObj.method !== 'get' && apiObject.requestBody ) {\n    console.log(apiObject)\n    Object.keys(apiObject.requestBody.content).forEach(e => {\n      resObj.consumes.push(e)\n      resObj.body = objectConstructor(apiObject.requestBody.content[e].schema, data.components.schemas)\n    })\n  }\n  Object.keys(apiObject.responses).forEach(status => {\n    if (apiObject.responses[status].content) {\n      Object.keys(apiObject.responses[status].content).forEach(e => {\n        resObj.produces.push(e)\n        resObj.response = objectConstructor(apiObject.responses[status].content[e].schema, data.components.schemas)\n      })\n    }\n  })\n  return resObj\n}\n\n\nconst openApiDocFormatter = (data) => {\n  let controllers = {};\n  const url = new URL(data.servers[0].url)\n\n  let tags = []\n\n  for (const path in data.paths || {}) {\n    for (const method in data.paths[path] || {}) {\n      tags = [...tags, ...data.paths[path][method].tags]\n    }\n  }\n\n  tags = [...new Set(tags)]\n\n  tags.forEach(e => {\n    controllers[e] = {name: e, description: e , apis: []}\n  })\n\n  Object.keys(data.paths).forEach(path => {\n    const pathConfig = data.paths[path]\n    Object.keys(pathConfig).forEach(method => {\n      pathConfig[method].tags.forEach(tag => {\n        controllers[tag].apis.push(apiConstructor(path, method, data, url))\n      })\n    })\n  })\n\n  return {\n    host: url.host,\n    basePath: url.pathname,\n    info: data.info,\n    swagger: data.openapi,\n    controllers\n  }\n}\n\nexport default openApiDocFormatter\n"]}]}