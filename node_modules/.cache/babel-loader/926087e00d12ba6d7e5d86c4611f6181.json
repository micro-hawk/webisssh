{"remainingRequest":"/home/microhawk/github/webish/node_modules/thread-loader/dist/cjs.js!/home/microhawk/github/webish/node_modules/babel-loader/lib/index.js!/home/microhawk/github/webish/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/microhawk/github/webish/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/microhawk/github/webish/client/components/swaggerApiDoc/swagger/serverError.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/microhawk/github/webish/client/components/swaggerApiDoc/swagger/serverError.vue","mtime":1662182788537},{"path":"/home/microhawk/github/webish/node_modules/cache-loader/dist/cjs.js","mtime":1662182844115},{"path":"/home/microhawk/github/webish/node_modules/thread-loader/dist/cjs.js","mtime":1662182844048},{"path":"/home/microhawk/github/webish/node_modules/babel-loader/lib/index.js","mtime":1662182845501},{"path":"/home/microhawk/github/webish/node_modules/cache-loader/dist/cjs.js","mtime":1662182844115},{"path":"/home/microhawk/github/webish/node_modules/vue-loader/lib/index.js","mtime":1662182845851}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KdmFyIHNlcmlvdXNQaWthID0gcmVxdWlyZSgiQC9hc3NldHMvaW1hZ2VzL3Bpa2FjaHUtc2VyaW91cy5naWYiKTsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnTm9TZXJ2ZXInLAogIHByb3BzOiB7CiAgICBlcnJvcjogT2JqZWN0CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2VyaW91c1Bpa2E6IHNlcmlvdXNQaWthCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHVybDogZnVuY3Rpb24gdXJsKCkgewogICAgICB2YXIgX3RoaXMkZXJyb3IkY29uZmlnOwoKICAgICAgcmV0dXJuIChfdGhpcyRlcnJvciRjb25maWcgPSB0aGlzLmVycm9yLmNvbmZpZykgPT09IG51bGwgfHwgX3RoaXMkZXJyb3IkY29uZmlnID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRlcnJvciRjb25maWcudXJsOwogICAgfQogIH0KfTs="},{"version":3,"sources":["serverError.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAqBA,IAAA,WAAA,GAAA,OAAA,CAAA,qCAAA,CAAA;;AACA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AADA,GAFA;AAKA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,WAAA,EAAA;AADA,KAAA;AAAA,GALA;AAQA,EAAA,QAAA,EAAA;AACA,IAAA,GADA,iBACA;AAAA;;AACA,mCAAA,KAAA,KAAA,CAAA,MAAA,uDAAA,mBAAA,GAAA;AACA;AAHA;AARA,CAAA","sourcesContent":["<template>\n  <div class=\"no-server bg-ele-2 round my-10 p-5 flex\">\n    <img :src=\"seriousPika\" width=\"100px\" alt=\"\">\n    <div class=\"pl-10 fh tx-alert flex-grow\">\n      <div class=\"v-center space-between tx-x-small mb-3\">\n        <h3 class=\"tx-x-lg\">ERROR!!</h3>\n        <p-btn color=\"green\" light @click=\"$emit('retry')\">Retry </p-btn>\n      </div>\n      <p class=\"tx-small tx-light\">\n        <b>Error:</b>\n        <span class=\"tx-alert pl-2\">{{error.message}}</span>\n      </p>\n      <p class=\"tx-small tx-light\">\n        <b>Doc Api Path:</b>\n        <a class=\"tx-alert pl-2\" :href=\"url\" target=\"_blank\">{{url}}</a>\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nconst seriousPika = require(\"@/assets/images/pikachu-serious.gif\")\nexport default {\n  name: 'NoServer',\n  props: {\n    error: Object\n  },\n  data: () => ({\n    seriousPika\n  }),\n  computed: {\n    url () {\n      return this.error.config?.url\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped >\n@import '@var';\n.no-server {\n  background: rgba($color: $alert, $alpha: 0.3);\n}\n</style>"],"sourceRoot":"client/components/swaggerApiDoc/swagger"}]}