{"remainingRequest":"/home/microhawk/github/webish/node_modules/thread-loader/dist/cjs.js!/home/microhawk/github/webish/node_modules/babel-loader/lib/index.js!/home/microhawk/github/webish/node_modules/eslint-loader/index.js??ref--13-0!/home/microhawk/github/webish/client/helper/swagger-doc.js","dependencies":[{"path":"/home/microhawk/github/webish/client/helper/swagger-doc.js","mtime":1662182788537},{"path":"/home/microhawk/github/webish/node_modules/cache-loader/dist/cjs.js","mtime":1662182844115},{"path":"/home/microhawk/github/webish/node_modules/thread-loader/dist/cjs.js","mtime":1662182844048},{"path":"/home/microhawk/github/webish/node_modules/babel-loader/lib/index.js","mtime":1662182845501},{"path":"/home/microhawk/github/webish/node_modules/eslint-loader/index.js","mtime":1662182844238}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvbWljcm9oYXdrL2dpdGh1Yi93ZWJpc2gvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5kZXNjcmlwdGlvbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzLmpzIjsKCi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovCnZhciBwcmVtaXRpdmUgPSBbJ3N0cmluZycsICdpbnRlZ2VyJywgJ2Jvb2xlYW4nLCAnbG9uZycsICdkb3VibGUnXTsKdmFyIHByZW1pdGl2ZVZhbHVlID0gewogIHN0cmluZzogJ3N0cmluZycsCiAgaW50ZWdlcjogMCwKICAiYm9vbGVhbiI6IGZhbHNlLAogICJsb25nIjogMCwKICAiZG91YmxlIjogMAp9OwoKdmFyIG9iamVjdENvbnN0cnVjdG9yID0gZnVuY3Rpb24gb2JqZWN0Q29uc3RydWN0b3IocHJvcGVydHksIGRlZmluaXRpb25zKSB7CiAgaWYgKCd0eXBlJyBpbiBwcm9wZXJ0eSkgewogICAgaWYgKHByb3BlcnR5LnR5cGUgPT09ICdvYmplY3QnKSB7CiAgICAgIHZhciBjbGFzc09iaiA9IHt9OwoKICAgICAgaWYgKCdhZGRpdGlvbmFsUHJvcGVydGllcycgaW4gcHJvcGVydHkpIHsKICAgICAgICBjbGFzc09iai5NYXBLZXkgPSBvYmplY3RDb25zdHJ1Y3Rvcihwcm9wZXJ0eS5hZGRpdGlvbmFsUHJvcGVydGllcywgZGVmaW5pdGlvbnMpOwogICAgICB9CgogICAgICBmb3IgKHZhciBwcm9wIGluIHByb3BlcnR5LnByb3BlcnRpZXMgfHwge30pIHsKICAgICAgICBjbGFzc09ialtwcm9wXSA9IG9iamVjdENvbnN0cnVjdG9yKHByb3BlcnR5LnByb3BlcnRpZXNbcHJvcF0sIGRlZmluaXRpb25zKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGNsYXNzT2JqOwogICAgfSBlbHNlIGlmIChwcmVtaXRpdmUuaW5jbHVkZXMocHJvcGVydHkudHlwZSkpIHsKICAgICAgcmV0dXJuIHByZW1pdGl2ZVZhbHVlW3Byb3BlcnR5LnR5cGVdOwogICAgfSBlbHNlIGlmIChwcm9wZXJ0eS50eXBlID09PSAnYXJyYXknKSB7CiAgICAgIHJldHVybiBbb2JqZWN0Q29uc3RydWN0b3IocHJvcGVydHkuaXRlbXMsIGRlZmluaXRpb25zKV07CiAgICB9CiAgfQoKICBpZiAoJyRyZWYnIGluIHByb3BlcnR5KSB7CiAgICByZXR1cm4gZGVmaW5pdGlvbnNbcHJvcGVydHkuJHJlZi5zcGxpdCgnLycpWzJdXSA/IG9iamVjdENvbnN0cnVjdG9yKGRlZmluaXRpb25zW3Byb3BlcnR5LiRyZWYuc3BsaXQoJy8nKVsyXV0sIGRlZmluaXRpb25zKSA6IHt9OwogIH0KfTsKCnZhciBwYXJhbWV0ZXJGb3JtYXR0ZXIgPSBmdW5jdGlvbiBwYXJhbWV0ZXJGb3JtYXR0ZXIocGFyYW1ldGVyKSB7CiAgdmFyIG9iaiA9IHt9OwogIG9iai5uYW1lID0gcGFyYW1ldGVyLm5hbWU7CiAgb2JqLmRlc2NyaXB0aW9uID0gcGFyYW1ldGVyLmRlc2NyaXB0aW9uOwogIG9iai5yZXF1aXJlZCA9IHBhcmFtZXRlci5yZXF1aXJlZDsKICBvYmouaGFzT3B0aW9ucyA9ICdlbnVtJyBpbiBwYXJhbWV0ZXI7CgogIGlmIChvYmouaGFzT3B0aW9ucykgewogICAgb2JqLm9wdGlvbnMgPSBwYXJhbWV0ZXJbImVudW0iXTsKICB9CgogIG9iai50eXBlID0gcGFyYW1ldGVyLnR5cGU7CiAgb2JqLnZhbHVlID0gcGFyYW1ldGVyWyJkZWZhdWx0Il0gfHwgJyc7CiAgcmV0dXJuIG9iajsKfTsKCnZhciBhcGlDb25zdHJ1Y3RvciA9IGZ1bmN0aW9uIGFwaUNvbnN0cnVjdG9yKHBhdGgsIG1ldGhvZCwgZGF0YSkgewogIHZhciBhcGlPYmplY3QgPSBkYXRhLnBhdGhzW3BhdGhdW21ldGhvZF07CiAgdmFyIHJlc09iaiA9IHt9OwogIHJlc09iai5wYXRoID0gcGF0aDsKICByZXNPYmoubWV0aG9kID0gbWV0aG9kOwogIHJlc09iai5zdW1tYXJ5ID0gYXBpT2JqZWN0LnN1bW1hcnk7CiAgcmVzT2JqLmRlc2NyaXB0aW9uID0gYXBpT2JqZWN0LmRlc2NyaXB0aW9uOwogIHJlc09iai5jb25zdW1lcyA9IGFwaU9iamVjdC5jb25zdW1lczsKICByZXNPYmoucHJvZHVjZXMgPSBhcGlPYmplY3QucHJvZHVjZXM7CiAgYXBpT2JqZWN0LnBhcmFtZXRlcnMgPSBhcGlPYmplY3QucGFyYW1ldGVycyB8fCBbXTsKICByZXNPYmoucGF0aFBhcmFtID0gYXBpT2JqZWN0LnBhcmFtZXRlcnMuZmlsdGVyKGZ1bmN0aW9uIChwYXJhbWV0ZXIpIHsKICAgIHJldHVybiBwYXJhbWV0ZXJbImluIl0gPT09ICdwYXRoJzsKICB9KS5tYXAocGFyYW1ldGVyRm9ybWF0dGVyKTsKICByZXNPYmoucXVlcnkgPSBhcGlPYmplY3QucGFyYW1ldGVycy5maWx0ZXIoZnVuY3Rpb24gKHBhcmFtZXRlcikgewogICAgcmV0dXJuIHBhcmFtZXRlclsiaW4iXSA9PT0gJ3F1ZXJ5JzsKICB9KS5tYXAocGFyYW1ldGVyRm9ybWF0dGVyKTsKICByZXNPYmouaGVhZGVyID0gYXBpT2JqZWN0LnBhcmFtZXRlcnMuZmlsdGVyKGZ1bmN0aW9uIChwYXJhbWV0ZXIpIHsKICAgIHJldHVybiBwYXJhbWV0ZXJbImluIl0gPT09ICdoZWFkZXInOwogIH0pLm1hcChwYXJhbWV0ZXJGb3JtYXR0ZXIpOwoKICBpZiAocmVzT2JqLm1ldGhvZCAhPT0gJ2dldCcpIHsKICAgIHJlc09iai5ib2R5ID0gYXBpT2JqZWN0LnBhcmFtZXRlcnMuZmlsdGVyKGZ1bmN0aW9uIChwYXJhbWV0ZXIpIHsKICAgICAgcmV0dXJuIHBhcmFtZXRlclsiaW4iXSA9PT0gJ2JvZHknOwogICAgfSk7CgogICAgaWYgKHJlc09iai5ib2R5Lmxlbmd0aCkgewogICAgICByZXNPYmouYm9keSA9IG9iamVjdENvbnN0cnVjdG9yKHJlc09iai5ib2R5WzBdLnNjaGVtYSwgZGF0YS5kZWZpbml0aW9ucyk7CiAgICB9CiAgfQoKICBPYmplY3Qua2V5cyhhcGlPYmplY3QucmVzcG9uc2VzKS5mb3JFYWNoKGZ1bmN0aW9uIChzdGF0dXMpIHsKICAgIGlmICgnc2NoZW1hJyBpbiBhcGlPYmplY3QucmVzcG9uc2VzW3N0YXR1c10pIHsKICAgICAgcmVzT2JqLnJlc3BvbnNlID0gb2JqZWN0Q29uc3RydWN0b3IoYXBpT2JqZWN0LnJlc3BvbnNlc1tzdGF0dXNdLnNjaGVtYSwgZGF0YS5kZWZpbml0aW9ucyk7CiAgICB9CiAgfSk7CiAgcmV0dXJuIHJlc09iajsKfTsKCnZhciBzd2FnZ2VyRG9jRm9ybWF0dGVyID0gZnVuY3Rpb24gc3dhZ2dlckRvY0Zvcm1hdHRlcihkYXRhKSB7CiAgdmFyIGNvbnRyb2xsZXJzID0ge307CiAgZGF0YS50YWdzLmZvckVhY2goZnVuY3Rpb24gKGUpIHsKICAgIGNvbnRyb2xsZXJzW2UubmFtZV0gPSBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGUpLCB7fSwgewogICAgICBhcGlzOiBbXQogICAgfSk7CiAgfSk7CiAgT2JqZWN0LmtleXMoZGF0YS5wYXRocykuZm9yRWFjaChmdW5jdGlvbiAocGF0aCkgewogICAgdmFyIHBhdGhDb25maWcgPSBkYXRhLnBhdGhzW3BhdGhdOwogICAgT2JqZWN0LmtleXMocGF0aENvbmZpZykuZm9yRWFjaChmdW5jdGlvbiAobWV0aG9kKSB7CiAgICAgIHBhdGhDb25maWdbbWV0aG9kXS50YWdzLmZvckVhY2goZnVuY3Rpb24gKHRhZykgewogICAgICAgIGNvbnRyb2xsZXJzW3RhZ10uYXBpcy5wdXNoKGFwaUNvbnN0cnVjdG9yKHBhdGgsIG1ldGhvZCwgZGF0YSkpOwogICAgICB9KTsKICAgIH0pOwogIH0pOwogIHJldHVybiB7CiAgICBob3N0OiBkYXRhLmhvc3QsCiAgICBiYXNlUGF0aDogZGF0YS5iYXNlUGF0aCwKICAgIGluZm86IGRhdGEuaW5mbywKICAgIHN3YWdnZXI6IGRhdGEuc3dhZ2dlciwKICAgIGNvbnRyb2xsZXJzOiBjb250cm9sbGVycwogIH07Cn07CgpleHBvcnQgZGVmYXVsdCBzd2FnZ2VyRG9jRm9ybWF0dGVyOw=="},{"version":3,"sources":["/home/microhawk/github/webish/client/helper/swagger-doc.js"],"names":["premitive","premitiveValue","string","integer","objectConstructor","property","definitions","type","classObj","MapKey","additionalProperties","prop","properties","includes","items","$ref","split","parameterFormatter","parameter","obj","name","description","required","hasOptions","options","value","apiConstructor","path","method","data","apiObject","paths","resObj","summary","consumes","produces","parameters","pathParam","filter","map","query","header","body","length","schema","Object","keys","responses","forEach","status","response","swaggerDocFormatter","controllers","tags","e","apis","pathConfig","tag","push","host","basePath","info","swagger"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nconst premitive = ['string', 'integer', 'boolean', 'long', 'double']\nconst premitiveValue = {\n  string: 'string',\n  integer: 0,\n  boolean: false,\n  long: 0,\n  double: 0,\n}\n\nconst objectConstructor = (property, definitions) => {\n  if ('type' in property) {\n    if (property.type === 'object') {\n      const classObj = {}\n      if ('additionalProperties' in property) {\n        classObj.MapKey = objectConstructor(property.additionalProperties, definitions )\n      }\n      for (let prop in property.properties || {}) {\n        classObj[prop] = objectConstructor(property.properties[prop], definitions )\n      }\n      return classObj\n    } else if (premitive.includes(property.type)) {\n      return premitiveValue[property.type]\n    } else if (property.type === 'array') {\n      return [ objectConstructor(property.items, definitions) ]\n    }\n  } if ('$ref' in property) {\n    return definitions[property.$ref.split('/')[2]] ? objectConstructor(definitions[property.$ref.split('/')[2]], definitions) : {}\n  }\n}\n\nconst parameterFormatter = (parameter) => {\n  const obj = {}\n  obj.name = parameter.name\n  obj.description = parameter.description\n  obj.required = parameter.required\n  obj.hasOptions = 'enum' in parameter\n  if (obj.hasOptions) {\n    obj.options = parameter.enum\n  }\n  obj.type = parameter.type\n  obj.value = parameter.default || ''\n  return obj\n}\n\nconst apiConstructor = (path, method, data) => {\n  const apiObject = data.paths[path][method]\n  const resObj = {}\n  resObj.path = path\n  resObj.method = method\n  resObj.summary = apiObject.summary\n  resObj.description = apiObject.description\n  resObj.consumes = apiObject.consumes\n  resObj.produces = apiObject.produces\n  apiObject.parameters = apiObject.parameters || []\n  resObj.pathParam = apiObject.parameters.filter(parameter => parameter.in === 'path').map(parameterFormatter)\n  resObj.query = apiObject.parameters.filter(parameter => parameter.in === 'query').map(parameterFormatter)\n  resObj.header = apiObject.parameters.filter(parameter => parameter.in === 'header').map(parameterFormatter)\n  if (resObj.method !== 'get') {\n    resObj.body = apiObject.parameters.filter(parameter => parameter.in === 'body')\n    if (resObj.body.length) {\n      resObj.body = objectConstructor(resObj.body[0].schema, data.definitions)\n    }\n  }\n  Object.keys(apiObject.responses).forEach(status => {\n    if ('schema' in apiObject.responses[status]) {\n      resObj.response = objectConstructor(apiObject.responses[status].schema, data.definitions)\n    }\n  })\n  return resObj\n}\n\nconst swaggerDocFormatter = (data) => {\n  let controllers = {}\n\n  data.tags.forEach(e => {\n    controllers[e.name] = {...e, apis: []}\n  })\n\n  Object.keys(data.paths).forEach(path => {\n    const pathConfig = data.paths[path]\n    Object.keys(pathConfig).forEach(method => {\n      pathConfig[method].tags.forEach(tag => {\n        controllers[tag].apis.push(apiConstructor(path, method, data))\n      })\n    })\n  })\n\n  return {\n    host: data.host,\n    basePath: data.basePath,\n    info: data.info,\n    swagger: data.swagger,\n    controllers\n  }\n}\n\nexport default swaggerDocFormatter"]}]}